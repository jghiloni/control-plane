---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: terraform-state
  type: s3
  source:
    bucket: ((terraform-s3-bucket))
    region_name: ((s3-region))
    access_key_id: ((s3-access-key))
    secret_access_key: ((s3-secret-key))
    versioned_file: terraform.tfstate

- name: terraforming-aws
  type: git
  source: ((terraforming-aws-repo))

- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet-api-token))
    product_slug: platform-automation
    product_version: ^3\..*$

- name: source
  type: git
  source: ((source-repo))

jobs:
- name: init-infrastructure
  serial: true
  plan:
  - aggregate:
    - get: terraform-state
    - get: terraforming-aws
    - get: source
    - get: platform-automation-image
      resource: platform-automation
      params:
        globs: ['*.tgz']
        unpack: true
    # - get: platform-automation-tasks
    #   resource: platform-automation
    #   params:
    #     globs: ['*.zip']
    #     unpack: true
#   - task: credhub-interpolate
#     image: platform-automation-image
#     file: platform-automation-tasks/tasks/credhub-interpolate.yml
#     params:
#       CREDHUB_SERVER: ((credhub_target_url))
#       CREDHUB_CLIENT: ((credhub_client.username))
#       CREDHUB_SECRET: ((credhub_client.password))
  - task: do-terraform
    image: platform-automation-image
    file: source/ci/tasks/do-terraform.yml
    params:
      TF_VAR_bucket: ((terraform-s3-bucket))
      TF_VAR_region: ((s3-region))
      AWS_ACCESS_KEY_ID: ((s3-access-key))
      AWS_SECRET_ACCESS_KEY: ((s3-secret-key))
      TF_VAR_env_name: pas-sandbox
      TF_VAR_ssl_cert: ((pas-tls.certificate))
      TF_VAR_ssl_private_key: ((pas-tls.private_key))
