---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: terraform-state
  type: s3
  source:
    bucket: ((terraform-s3-bucket))
    region_name: ((s3-region))
    access_key_id: ((s3-access-key))
    secret_access_key: ((s3-secret-key))
    versioned_file: pas-sandbox/terraform.tfstate

- name: terraforming-aws
  type: git
  source:
    uri: ((terraforming-aws-repo.uri))
    private_key: ((terraforming-aws-repo.private_key))

- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet-api-token))
    product_slug: platform-automation
    sort_by: semver

- name: source
  type: git
  source: 
    uri: ((source-repo.uri))
    private_key: ((source-repo.private_key))

- name: jq
  check_every: 24h
  type: github-release
  source:
    owner: stedolan
    repository: jq

jobs:
- name: init-infrastructure
  serial: true
  plan:
  - aggregate:
    - get: terraforming-aws
    - get: source
    - get: platform-automation-image
      resource: platform-automation
      params:
        globs: ['*.tgz']
        unpack: true
  - task: do-terraform
    image: platform-automation-image
    file: source/ci/tasks/do-terraform.yml
    params:
      TF_VAR_bucket: ((terraform-s3-bucket))
      TF_VAR_region: ((s3-region))
      TF_VAR_key: "pas-sandbox/terraform.tfstate"
      TF_VAR_access_key: ((s3-access-key))
      TF_VAR_secret_key: ((s3-secret-key))
      TF_VAR_env_name: pas-sandbox
      TF_VAR_ssl_cert: ((pas-tls.certificate))
      TF_VAR_ssl_private_key: ((pas-tls.private_key))
- name: install-opsman
  serial: true
  plan:
  - aggregate:
    - get: terraform-state
    - get: source
    - get: platform-automation-image
      resource: platform-automation
      trigger: true
      passed: [init-infrastructure]
      params:
        globs: ['*.tgz']
        unpack: true
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        globs: ['*.zip']
        unpack: true
    - get: jq
      params:
        globs: [jq-linux64]
  - task: build-opsman-vars
    image: platform-automation-image
    file: source/ci/tasks/build-opsman-vars.yml